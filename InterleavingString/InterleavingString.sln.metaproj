<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" InitialTargets="ValidateSolutionConfiguration;ValidateToolsVersions;ValidateProjects" DefaultTargets="Build">
  <PropertyGroup>
    <RoslynTargetsPath>C:\Program Files\dotnet\sdk\5.0.200\Roslyn</RoslynTargetsPath>
    <VisualStudioVersion>16.0</VisualStudioVersion>
    <_DirectorySolutionPropsFile>Directory.Solution.props</_DirectorySolutionPropsFile>
    <_DirectorySolutionPropsBasePath />
    <Configuration>Debug</Configuration>
    <Platform>Any CPU</Platform>
    <AspNetConfiguration>Debug</AspNetConfiguration>
    <SolutionDir>C:\git\petitpal\leetcode\InterleavingString\</SolutionDir>
    <SolutionExt>.sln</SolutionExt>
    <SolutionFileName>InterleavingString.sln</SolutionFileName>
    <SolutionName>InterleavingString</SolutionName>
    <SolutionPath>C:\git\petitpal\leetcode\InterleavingString\InterleavingString.sln</SolutionPath>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <CurrentSolutionConfigurationContents>
      <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{CEF374B4-7105-4894-80AE-ED8A5C9A26C6}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{198BD822-3B01-48AD-A58A-DCEE0B1DA1B0}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
    </CurrentSolutionConfigurationContents>
    <MicrosoftNETBuildTasksDirectoryRoot>C:\Program Files\dotnet\sdk\5.0.200\Sdks\Microsoft.NET.Sdk\targets\..\tools\</MicrosoftNETBuildTasksDirectoryRoot>
    <MicrosoftNETBuildTasksTFM>net5.0</MicrosoftNETBuildTasksTFM>
    <MicrosoftNETBuildTasksDirectory>C:\Program Files\dotnet\sdk\5.0.200\Sdks\Microsoft.NET.Sdk\targets\..\tools\net5.0/</MicrosoftNETBuildTasksDirectory>
    <MicrosoftNETBuildTasksAssembly>C:\Program Files\dotnet\sdk\5.0.200\Sdks\Microsoft.NET.Sdk\targets\..\tools\net5.0/Microsoft.NET.Build.Tasks.dll</MicrosoftNETBuildTasksAssembly>
    <DefaultImplicitPackages>Microsoft.NETCore.App;NETStandard.Library</DefaultImplicitPackages>
    <DotnetCliToolTargetFramework>netcoreapp2.2</DotnetCliToolTargetFramework>
    <NuGetRestoreTargets>C:\Program Files\dotnet\sdk\5.0.200\\NuGet.targets</NuGetRestoreTargets>
    <IsRestoreTargetsFileLoaded>true</IsRestoreTargetsFileLoaded>
    <RestoreTaskAssemblyFile>NuGet.Build.Tasks.dll</RestoreTaskAssemblyFile>
    <HideWarningsAndErrors>false</HideWarningsAndErrors>
    <RestoreRecursive>true</RestoreRecursive>
    <MSBuildAllProjects>C:\git\petitpal\leetcode\InterleavingString\InterleavingString.sln.metaproj;;C:\Program Files\dotnet\sdk\5.0.200\NuGet.targets</MSBuildAllProjects>
    <RestoreUseSkipNonexistentTargets>true</RestoreUseSkipNonexistentTargets>
    <ValidateRuntimeIdentifierCompatibility>false</ValidateRuntimeIdentifierCompatibility>
    <RestoreContinueOnError>WarnAndContinue</RestoreContinueOnError>
    <RestoreBuildInParallel>true</RestoreBuildInParallel>
    <_RestoreSolutionFileUsed>true</_RestoreSolutionFileUsed>
    <NuGetInteractive />
    <PackageDownloadSupported>true</PackageDownloadSupported>
    <GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter>true</GetReferenceNearestTargetFrameworkTaskSupportsTargetPlatformParameter>
    <_GenerateRestoreGraphProjectEntryInputProperties>
      ExcludeRestorePackageImports=true;
      _RestoreSolutionFileUsed=true;
      SolutionDir=C:\git\petitpal\leetcode\InterleavingString\;
      SolutionName=InterleavingString;
      SolutionFileName=InterleavingString.sln;
      SolutionPath=C:\git\petitpal\leetcode\InterleavingString\InterleavingString.sln;
      SolutionExt=.sln;
    </_GenerateRestoreGraphProjectEntryInputProperties>
    <_DirectorySolutionTargetsFile>Directory.Solution.targets</_DirectorySolutionTargetsFile>
    <_DirectorySolutionTargetsBasePath />
  </PropertyGroup>
  <ItemDefinitionGroup />
  <ItemGroup>
    <SolutionConfiguration Include="Debug|Any CPU">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{CEF374B4-7105-4894-80AE-ED8A5C9A26C6}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{198BD822-3B01-48AD-A58A-DCEE0B1DA1B0}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>Any CPU</Platform>
      <Configuration>Debug</Configuration>
    </SolutionConfiguration>
    <SolutionConfiguration Include="Debug|x64">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{CEF374B4-7105-4894-80AE-ED8A5C9A26C6}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{198BD822-3B01-48AD-A58A-DCEE0B1DA1B0}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>x64</Platform>
      <Configuration>Debug</Configuration>
    </SolutionConfiguration>
    <SolutionConfiguration Include="Debug|x86">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{CEF374B4-7105-4894-80AE-ED8A5C9A26C6}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{198BD822-3B01-48AD-A58A-DCEE0B1DA1B0}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj" BuildProjectInSolution="True">Debug|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>x86</Platform>
      <Configuration>Debug</Configuration>
    </SolutionConfiguration>
    <SolutionConfiguration Include="Release|Any CPU">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{CEF374B4-7105-4894-80AE-ED8A5C9A26C6}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{198BD822-3B01-48AD-A58A-DCEE0B1DA1B0}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>Any CPU</Platform>
      <Configuration>Release</Configuration>
    </SolutionConfiguration>
    <SolutionConfiguration Include="Release|x64">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{CEF374B4-7105-4894-80AE-ED8A5C9A26C6}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{198BD822-3B01-48AD-A58A-DCEE0B1DA1B0}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>x64</Platform>
      <Configuration>Release</Configuration>
    </SolutionConfiguration>
    <SolutionConfiguration Include="Release|x86">
      <Content>
        <SolutionConfiguration xmlns="">
  <ProjectConfiguration Project="{CEF374B4-7105-4894-80AE-ED8A5C9A26C6}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
  <ProjectConfiguration Project="{198BD822-3B01-48AD-A58A-DCEE0B1DA1B0}" AbsolutePath="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj" BuildProjectInSolution="True">Release|AnyCPU</ProjectConfiguration>
</SolutionConfiguration>
      </Content>
      <Platform>x86</Platform>
      <Configuration>Release</Configuration>
    </SolutionConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj">
      <AdditionalProperties>Configuration=Debug; Platform=AnyCPU</AdditionalProperties>
      <Platform>AnyCPU</Platform>
      <Configuration>Debug</Configuration>
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
    </ProjectReference>
    <ProjectReference Include="C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj">
      <AdditionalProperties>Configuration=Debug; Platform=AnyCPU</AdditionalProperties>
      <Platform>AnyCPU</Platform>
      <Configuration>Debug</Configuration>
      <ToolsVersion>
      </ToolsVersion>
      <SkipNonexistentProjects>False</SkipNonexistentProjects>
    </ProjectReference>
  </ItemGroup>
  <Target Name="ValidateSolutionConfiguration">
    <Error Condition="('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' != 'true')" Text="The specified solution configuration &quot;$(Configuration)|$(Platform)&quot; is invalid. Please specify a valid solution configuration using the Configuration and Platform properties (e.g. MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform=&quot;Any CPU&quot;) or leave those properties blank to use the default solution configuration." Code="MSB4126" HelpKeyword="MSBuild.SolutionInvalidSolutionConfiguration" />
    <Warning Condition="('$(CurrentSolutionConfigurationContents)' == '') and ('$(SkipInvalidConfigurations)' == 'true')" Text="The specified solution configuration &quot;$(Configuration)|$(Platform)&quot; is invalid. Please specify a valid solution configuration using the Configuration and Platform properties (e.g. MSBuild.exe Solution.sln /p:Configuration=Debug /p:Platform=&quot;Any CPU&quot;) or leave those properties blank to use the default solution configuration." Code="MSB4126" HelpKeyword="MSBuild.SolutionInvalidSolutionConfiguration" />
    <Message Condition="'$(CurrentSolutionConfigurationContents)' != ''" Text="Building solution configuration &quot;$(Configuration)|$(Platform)&quot;." />
  </Target>
  <Target Name="ValidateToolsVersions">
    <Error Condition="'$(MSBuildToolsVersion)' == '2.0' and ('$(ProjectToolsVersion)' != '2.0' and '$(ProjectToolsVersion)' != '')" Text="The tools version &quot;$(MSBuildToolsVersion)&quot; of the solution does not support building projects with a different tools version." Code="MSB4149" HelpKeyword="MSBuild.SolutionToolsVersionDoesNotSupportProjectToolsVersion" />
  </Target>
  <Target Name="ValidateProjects" />
  <Target Name="GetSolutionConfigurationContents" Outputs="$(SolutionConfigurationContents)" />
  <Target Name="GetTargetFrameworkProperties" Returns="TargetFramework=$(NearestTargetFramework);ProjectHasSingleTargetFramework=$(_HasSingleTargetFramework);ProjectIsRidAgnostic=$(_IsRidAgnostic)">
    <GetNearestTargetFramework Condition="'$(_SkipNearestTargetFrameworkResolution)' != 'true'" ReferringTargetFramework="$(ReferringTargetFramework)" PossibleTargetFrameworks="$(_PossibleTargetFrameworks)" ProjectFilePath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="NearestTargetFramework" ItemName="NearestTargetFramework" />
    </GetNearestTargetFramework>
  </Target>
  <Target Name="_CheckForSolutionLevelRuntimeIdentifier" Condition="'$(RuntimeIdentifier)' != ''">
    <NETSdkError ResourceName="CannotHaveSolutionLevelRuntimeIdentifier" />
  </Target>
  <Target Name="Restore" DependsOnTargets="_GenerateRestoreGraph">
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <RestoreTask RestoreNoCache="$(RestoreNoCache)" RestoreForce="$(RestoreForce)" HideWarningsAndErrors="$(HideWarningsAndErrors)" Interactive="$(NuGetInteractive)" RestoreForceEvaluate="$(RestoreForceEvaluate)" RestorePackagesConfig="$(RestorePackagesConfig)" RestoreRecursive="$(RestoreRecursive)" RestoreDisableParallel="$(RestoreDisableParallel)" RestoreIgnoreFailedSources="$(RestoreIgnoreFailedSources)" RestoreGraphItems="@(_RestoreGraphEntryFiltered)" />
  </Target>
  <Target Name="GenerateRestoreGraphFile" DependsOnTargets="_GenerateRestoreGraph">
    <Error Condition="$(RestoreGraphOutputPath) == ''" Text="Missing RestoreGraphOutputPath property!" />
    <RemoveDuplicates Inputs="@(_RestoreGraphEntry)">
      <Output TaskParameter="Filtered" ItemName="_RestoreGraphEntryFiltered" />
    </RemoveDuplicates>
    <WriteRestoreGraphTask RestoreGraphOutputPath="$(RestoreGraphOutputPath)" RestoreRecursive="$(RestoreRecursive)" RestoreGraphItems="@(_RestoreGraphEntryFiltered)" />
  </Target>
  <Target Name="CollectPackageReferences" Returns="@(PackageReference)" />
  <Target Name="CollectCentralPackageVersions" Returns="@(PackageVersion)" />
  <Target Name="CollectPackageDownloads" Returns="@(PackageDownload)" />
  <Target Name="CollectFrameworkReferences" Returns="@(_FrameworkReferenceForRestore)" />
  <Target Name="_LoadRestoreGraphEntryPoints" Returns="@(RestoreGraphProjectInputItems)">
    <GetRestoreSolutionProjectsTask Condition=" $(MSBuildProjectFullPath.EndsWith('.metaproj')) == 'true' AND @(RestoreGraphProjectInputItems) == '' " ProjectReferences="@(ProjectReference)" SolutionFilePath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="OutputProjectReferences" ItemName="RestoreGraphProjectInputItems" />
    </GetRestoreSolutionProjectsTask>
  </Target>
  <Target Name="_FilterRestoreGraphProjectInputItems" DependsOnTargets="_LoadRestoreGraphEntryPoints" Returns="@(FilteredRestoreGraphProjectInputItems)">
    <RemoveDuplicates Inputs="@(_FilteredRestoreGraphProjectInputItemsTmp)">
      <Output TaskParameter="Filtered" ItemName="FilteredRestoreGraphProjectInputItemsWithoutDuplicates" />
    </RemoveDuplicates>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " SkipNonexistentTargets="true" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_IsProjectRestoreSupported">
      <Output TaskParameter="TargetOutputs" ItemName="FilteredRestoreGraphProjectInputItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_IsProjectRestoreSupported">
      <Output TaskParameter="TargetOutputs" ItemName="FilteredRestoreGraphProjectInputItems" />
    </MSBuild>
    <WarnForInvalidProjectsTask Condition=" '$(DisableWarnForInvalidRestoreProjects)' != 'true' AND '$(HideWarningsAndErrors)' != 'true' " AllProjects="@(FilteredRestoreGraphProjectInputItemsWithoutDuplicates)" ValidProjects="@(FilteredRestoreGraphProjectInputItems)" />
  </Target>
  <Target Name="_GenerateRestoreGraph" DependsOnTargets="_FilterRestoreGraphProjectInputItems;_GetAllRestoreProjectPathItems" Returns="@(_RestoreGraphEntry)">
    <Message Text="Generating dg file" Importance="low" />
    <Message Text="%(_RestoreProjectPathItems.Identity)" Importance="low" />
    <MSBuild BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_GenerateRestoreGraphProjectEntryInput)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GenerateRestoreGraphProjectEntry">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
    <MSBuild BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_RestoreProjectPathItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GenerateProjectRestoreGraph">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateRestoreGraphProjectEntry" DependsOnTargets="_GenerateRestoreSpecs;_GenerateDotnetCliToolReferenceSpecs" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreSpecs" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreGraphEntry)">
    <Message Text="Restore entry point $(MSBuildProjectFullPath)" Importance="low" />
  </Target>
  <Target Name="_GenerateDotnetCliToolReferenceSpecs" DependsOnTargets="_GetRestoreSettings" Returns="@(_RestoreGraphEntry)">
    <GetRestoreDotnetCliToolsTask Condition=" '$(RestoreDotnetCliToolReferences)' == '' OR '$(RestoreDotnetCliToolReferences)' == 'true' " RestorePackagesPath="$(_OutputPackagesPath)" RestoreFallbackFolders="$(_OutputFallbackFolders)" DotnetCliToolReferences="@(DotnetCliToolReference)" RestoreSources="$(_OutputSources)" ProjectPath="$(MSBuildProjectFullPath)" RestoreConfigFilePaths="$(_OutputConfigFilePaths)" ToolFramework="$(DotnetCliToolTargetFramework)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreDotnetCliToolsTask>
  </Target>
  <Target Name="_GetProjectJsonPath" Returns="$(_CurrentProjectJsonPath)">
    <GetRestoreProjectJsonPathTask Condition=" '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == '' " ProjectPath="$(MSBuildProjectFullPath)">
      <Output TaskParameter="ProjectJsonPath" ItemName="_CurrentProjectJsonPath" />
    </GetRestoreProjectJsonPathTask>
  </Target>
  <Target Name="_GetRestoreProjectStyle" DependsOnTargets="_GetProjectJsonPath;CollectPackageReferences" Returns="$(RestoreProjectStyle);$(PackageReferenceCompatibleProjectStyle)">
    <GetRestoreProjectStyleTask RestoreProjectStyle="$(RestoreProjectStyle)" HasPackageReferenceItems="$(_HasPackageReferenceItems)" ProjectJsonPath="$(_CurrentProjectJsonPath)" MSBuildProjectName="$(MSBuildProjectName)" MSBuildProjectDirectory="$(MSBuildProjectDirectory)">
      <Output TaskParameter="ProjectStyle" ItemName="RestoreProjectStyle" />
      <Output TaskParameter="IsPackageReferenceCompatibleProjectStyle" ItemName="PackageReferenceCompatibleProjectStyle" />
    </GetRestoreProjectStyleTask>
  </Target>
  <Target Name="EnableIntermediateOutputPathMismatchWarning" Condition="'$(RestoreProjectStyle)' == 'PackageReference'" DependsOnTargets="_GetRestoreProjectStyle" />
  <Target Name="_GetRestoreTargetFrameworksOutput" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreTargetFrameworksOutputFiltered)">
    <GetProjectTargetFrameworksTask Condition=" '$(RestoreProjectStyle)' != 'ProjectJson'" TargetFramework="$(TargetFramework)" TargetFrameworkMoniker="$(TargetFrameworkMoniker)" TargetFrameworks="$(TargetFrameworks)" ProjectPath="$(MSBuildProjectFullPath)" TargetPlatformVersion="$(TargetPlatformVersion)" TargetPlatformIdentifier="$(TargetPlatformIdentifier)" TargetPlatformMinVersion="$(TargetPlatformMinVersion)">
      <Output TaskParameter="ProjectTargetFrameworks" ItemName="_RestoreProjectFramework" />
    </GetProjectTargetFrameworksTask>
  </Target>
  <Target Name="_GetRestoreTargetFrameworksAsItems" DependsOnTargets="_GetRestoreProjectStyle" Returns="@(_RestoreTargetFrameworkItems)" />
  <Target Name="_GetRestoreSettings" Condition=" '$(RestoreProjectStyle)' == 'PackageReference' OR '$(RestoreProjectStyle)' == 'ProjectJson' OR '$(RestoreProjectStyle)' == 'DotnetToolReference' OR '$(RestoreProjectStyle)' == 'PackagesConfig'" DependsOnTargets="_GetRestoreSettingsOverrides;_GetRestoreSettingsCurrentProject;_GetRestoreSettingsAllFrameworks" Returns="$(_OutputSources);$(_OutputPackagesPath);$(_OutputRepositoryPath);$(_OutputFallbackFolders);$(_OutputConfigFilePaths)">
    <GetRestoreSettingsTask RestorePackagesPath="$(RestorePackagesPath)" RestorePackagesPathOverride="$(_RestorePackagesPathOverride)" RestoreSolutionDirectory="$(RestoreSolutionDirectory)" RestoreRootConfigDirectory="$(RestoreRootConfigDirectory)" RestoreFallbackFoldersOverride="$(_RestoreFallbackFoldersOverride)" RestoreFallbackFolders="$(RestoreFallbackFolders)" RestoreRepositoryPathOverride="$(_RestoreRepositoryPathOverride)" MSBuildStartupDirectory="$(MSBuildStartupDirectory)" ProjectUniqueName="$(MSBuildProjectFullPath)" RestoreSources="$(RestoreSources)" RestoreConfigFile="$(RestoreConfigFile)" RestoreProjectStyle="$(RestoreProjectStyle)" RestoreSettingsPerFramework="@(_RestoreSettingsPerFramework)" RestoreRepositoryPath="$(RestoreRepositoryPath)" RestoreSourcesOverride="$(_RestoreSourcesOverride)">
      <Output TaskParameter="OutputSources" ItemName="_OutputSources" />
      <Output TaskParameter="OutputPackagesPath" ItemName="_OutputPackagesPath" />
      <Output TaskParameter="OutputRepositoryPath" ItemName="_OutputRepositoryPath" />
      <Output TaskParameter="OutputFallbackFolders" ItemName="_OutputFallbackFolders" />
      <Output TaskParameter="OutputConfigFilePaths" ItemName="_OutputConfigFilePaths" />
    </GetRestoreSettingsTask>
  </Target>
  <Target Name="_GetRestoreSettingsCurrentProject" Condition=" '$(TargetFrameworks)' == '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' " DependsOnTargets="_GetRestoreSettingsPerFramework" Returns="@(_RestoreSettingsPerFramework)" />
  <Target Name="_GetRestoreSettingsAllFrameworks" Condition=" '$(TargetFrameworks)' != '' AND '$(PackageReferenceCompatibleProjectStyle)' == 'true' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems;_GetRestoreProjectStyle" Returns="@(_RestoreSettingsPerFramework)">
    <MSBuild BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildProjectFullPath)" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GetRestoreSettingsPerFramework">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreSettingsPerFramework" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestoreSettingsPerFramework" Returns="@(_RestoreSettingsPerFramework)" />
  <Target Name="_GenerateRestoreProjectSpec" DependsOnTargets="_GetRestoreProjectStyle;_GetRestoreTargetFrameworksOutput;_GetRestoreSettings" Returns="@(_RestoreGraphEntry)">
    <ConvertToAbsolutePath Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' OR '$(RestoreProjectStyle)' == 'ProjectJson'" Paths="$(RestoreOutputPath)">
      <Output TaskParameter="AbsolutePaths" ItemName="RestoreOutputAbsolutePath" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="_GenerateProjectRestoreGraph" DependsOnTargets="&#xD;&#xA;      _GetRestoreProjectStyle;&#xD;&#xA;      _GenerateRestoreProjectSpec;&#xD;&#xA;      _GenerateRestoreDependencies" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateRestoreDependencies" DependsOnTargets="_GenerateProjectRestoreGraphAllFrameworks;_GenerateProjectRestoreGraphCurrentProject" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateProjectRestoreGraphAllFrameworks" Condition=" '$(TargetFrameworks)' != '' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems" Returns="@(_RestoreGraphEntry)">
    <MSBuild BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildProjectFullPath)" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GenerateProjectRestoreGraphPerFramework">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreGraphEntry" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateProjectRestoreGraphCurrentProject" Condition=" '$(TargetFrameworks)' == '' " DependsOnTargets="_GenerateProjectRestoreGraphPerFramework" Returns="@(_RestoreGraphEntry)" />
  <Target Name="_GenerateProjectRestoreGraphPerFramework" DependsOnTargets="_GetRestoreProjectStyle;CollectPackageReferences;CollectPackageDownloads;CollectFrameworkReferences;CollectCentralPackageVersions" Returns="@(_RestoreGraphEntry)">
    <GetRestoreProjectReferencesTask ProjectReferences="@(ProjectReference)" ParentProjectPath="$(MSBuildProjectFullPath)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreProjectReferencesTask>
    <GetRestorePackageReferencesTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " PackageReferences="@(PackageReference)" TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestorePackageReferencesTask>
    <GetCentralPackageVersionsTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' AND '$(_CentralPackageVersionsEnabled)' == 'true' " TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)" CentralPackageVersions="@(PackageVersion)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetCentralPackageVersionsTask>
    <GetRestorePackageDownloadsTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)" PackageDownloads="@(PackageDownload)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestorePackageDownloadsTask>
    <GetRestoreFrameworkReferencesTask Condition=" '$(PackageReferenceCompatibleProjectStyle)' == 'true' " TargetFrameworks="$(TargetFramework)" ProjectUniqueName="$(MSBuildProjectFullPath)" FrameworkReferences="@(FrameworkReference)">
      <Output TaskParameter="RestoreGraphItems" ItemName="_RestoreGraphEntry" />
    </GetRestoreFrameworkReferencesTask>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItemsCurrentProject" Condition=" '$(TargetFrameworks)' == '' " DependsOnTargets="_GenerateRestoreProjectPathItemsPerFramework" Returns="@(_RestoreProjectPathItems)" />
  <Target Name="_GenerateRestoreProjectPathItemsPerFramework" Returns="@(_RestoreProjectPathItems)">
    <ConvertToAbsolutePath Paths="@(ProjectReference)">
      <Output TaskParameter="AbsolutePaths" ItemName="_RestoreGraphAbsoluteProjectPaths" />
    </ConvertToAbsolutePath>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItems" DependsOnTargets="_GenerateRestoreProjectPathItemsAllFrameworks;_GenerateRestoreProjectPathItemsCurrentProject" Returns="@(_CurrentRestoreProjectPathItems)">
    <RemoveDuplicates Inputs="@(_RestoreProjectPathItems)">
      <Output TaskParameter="Filtered" ItemName="_CurrentRestoreProjectPathItems" />
    </RemoveDuplicates>
  </Target>
  <Target Name="_GenerateRestoreProjectPathItemsAllFrameworks" Condition=" '$(TargetFrameworks)' != '' " DependsOnTargets="_GetRestoreTargetFrameworksAsItems" Returns="@(_RestoreProjectPathItems)">
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " SkipNonexistentProjects="true" SkipNonexistentTargets="true" BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildProjectFullPath)" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GenerateRestoreProjectPathItemsPerFramework">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="$(MSBuildProjectFullPath)" Properties="TargetFramework=%(_RestoreTargetFrameworkItems.Identity);&#xD;&#xA;                  $(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GenerateRestoreProjectPathItemsPerFramework">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
  </Target>
  <Target Name="_GenerateRestoreProjectPathWalk" DependsOnTargets="_GenerateRestoreProjectPathItems" Returns="@(_RestoreProjectPathItems)">
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " SkipNonexistentProjects="true" SkipNonexistentTargets="true" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_CurrentRestoreProjectPathItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GenerateRestoreProjectPathWalk">
      <Output TaskParameter="TargetOutputs" ItemName="_GenerateRestoreProjectPathWalkOutputs" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="@(_CurrentRestoreProjectPathItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GenerateRestoreProjectPathWalk">
      <Output TaskParameter="TargetOutputs" ItemName="_GenerateRestoreProjectPathWalkOutputs" />
    </MSBuild>
    <RemoveDuplicates Inputs="@(_GenerateRestoreProjectPathWalkOutputs)">
      <Output TaskParameter="Filtered" ItemName="_RestoreProjectPathItems" />
    </RemoveDuplicates>
  </Target>
  <Target Name="_GetAllRestoreProjectPathItems" DependsOnTargets="_FilterRestoreGraphProjectInputItems" Returns="@(_RestoreProjectPathItems)">
    <NuGetMessageTask Name="DeterminingProjectsToRestore" Importance="High" />
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " SkipNonexistentProjects="true" SkipNonexistentTargets="true" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(FilteredRestoreGraphProjectInputItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GenerateRestoreProjectPathWalk">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItemsOutputs" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="@(FilteredRestoreGraphProjectInputItems)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_GenerateRestoreProjectPathWalk">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItemsOutputs" />
    </MSBuild>
    <RemoveDuplicates Inputs="@(_RestoreProjectPathItemsOutputs)">
      <Output TaskParameter="Filtered" ItemName="_RestoreProjectPathItemsWithoutDupes" />
    </RemoveDuplicates>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' == 'true' " SkipNonexistentProjects="true" SkipNonexistentTargets="true" BuildInParallel="$(RestoreBuildInParallel)" Projects="@(_RestoreProjectPathItemsWithoutDupes)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_IsProjectRestoreSupported">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreUseSkipNonexistentTargets)' != 'true' " ContinueOnError="$(RestoreContinueOnError)" Projects="@(_RestoreProjectPathItemsWithoutDupes)" Properties="$(_GenerateRestoreGraphProjectEntryInputProperties)" Targets="_IsProjectRestoreSupported">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreProjectPathItems" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestoreSettingsOverrides" Returns="$(_RestorePackagesPathOverride);$(_RestoreRepositoryPathOverride);$(_RestoreSourcesOverride);$(_RestoreFallbackFoldersOverride)">
    <MSBuild Condition=" '$(RestorePackagesPath)' != '' " BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestorePackagesPathOverride">
      <Output TaskParameter="TargetOutputs" ItemName="_RestorePackagesPathOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreRepositoryPathOverride)' != '' " BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestoreRepositoryPathOverride">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreRepositoryPathOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreSources)' != '' " BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestoreSourcesOverride">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreSourcesOverride" />
    </MSBuild>
    <MSBuild Condition=" '$(RestoreFallbackFolders)' != '' " BuildInParallel="$(RestoreBuildInParallel)" Projects="$(MSBuildThisFileFullPath)" Targets="_GetRestoreFallbackFoldersOverride">
      <Output TaskParameter="TargetOutputs" ItemName="_RestoreFallbackFoldersOverride" />
    </MSBuild>
  </Target>
  <Target Name="_GetRestorePackagesPathOverride" Returns="$(_RestorePackagesPathOverride)" />
  <Target Name="_GetRestoreRepositoryPathOverride" Returns="$(_RestoreRepositoryPathOverride)" />
  <Target Name="_GetRestoreSourcesOverride" Returns="$(_RestoreSourcesOverride)" />
  <Target Name="_GetRestoreFallbackFoldersOverride" Returns="$(_RestoreFallbackFoldersOverride)" />
  <Target Name="_IsProjectRestoreSupported" Returns="@(_ValidProjectsForRestore)" />
  <Target Name="Build" Outputs="@(CollectedBuildOutput)">
    <MSBuild SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" BuildInParallel="True" Projects="@(ProjectReference)" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Clean">
    <MSBuild SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" BuildInParallel="True" Projects="@(ProjectReference-&gt;Reverse())" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" Targets="Clean" />
  </Target>
  <Target Name="Rebuild" Outputs="@(CollectedBuildOutput)">
    <MSBuild SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" BuildInParallel="True" Projects="@(ProjectReference)" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" Targets="Rebuild">
      <Output TaskParameter="TargetOutputs" ItemName="CollectedBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="Publish">
    <MSBuild SkipNonexistentProjects="%(ProjectReference.SkipNonexistentProjects)" BuildInParallel="True" Projects="@(ProjectReference)" Properties="BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" Targets="Publish" />
  </Target>
  <Target Name="InterleavingString" Outputs="@(InterleavingStringBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj'" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" ToolsVersion="$(ProjectToolsVersion)">
      <Output TaskParameter="TargetOutputs" ItemName="InterleavingStringBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="InterleavingString:Clean">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj'" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" ToolsVersion="$(ProjectToolsVersion)" Targets="Clean" />
  </Target>
  <Target Name="InterleavingString:Rebuild" Outputs="@(InterleavingStringBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj'" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" ToolsVersion="$(ProjectToolsVersion)" Targets="Rebuild">
      <Output TaskParameter="TargetOutputs" ItemName="InterleavingStringBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="InterleavingString:Publish">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\git\petitpal\leetcode\InterleavingString\InterleavingStringService\InterleavingString.csproj'" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" ToolsVersion="$(ProjectToolsVersion)" Targets="Publish" />
  </Target>
  <Target Name="InterleavingStringTest" Outputs="@(InterleavingStringTestBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj'" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" ToolsVersion="$(ProjectToolsVersion)">
      <Output TaskParameter="TargetOutputs" ItemName="InterleavingStringTestBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="InterleavingStringTest:Clean">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj'" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" ToolsVersion="$(ProjectToolsVersion)" Targets="Clean" />
  </Target>
  <Target Name="InterleavingStringTest:Rebuild" Outputs="@(InterleavingStringTestBuildOutput)">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj'" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" ToolsVersion="$(ProjectToolsVersion)" Targets="Rebuild">
      <Output TaskParameter="TargetOutputs" ItemName="InterleavingStringTestBuildOutput" />
    </MSBuild>
  </Target>
  <Target Name="InterleavingStringTest:Publish">
    <MSBuild Condition="'%(ProjectReference.Identity)' == 'C:\git\petitpal\leetcode\InterleavingString\InterleavingStringTest\InterleavingStringTest.csproj'" BuildInParallel="True" Projects="@(ProjectReference)" Properties="Configuration=Debug; Platform=AnyCPU;BuildingSolutionFile=true; CurrentSolutionConfigurationContents=$(CurrentSolutionConfigurationContents); SolutionDir=$(SolutionDir); SolutionExt=$(SolutionExt); SolutionFileName=$(SolutionFileName); SolutionName=$(SolutionName); SolutionPath=$(SolutionPath)" ToolsVersion="$(ProjectToolsVersion)" Targets="Publish" />
  </Target>
</Project>